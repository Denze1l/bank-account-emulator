{"version":3,"sources":["components/Controls/style.module.css","components/Balance/style.module.css","components/TransactionHistory/style.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","components/App.js","index.js"],"names":["module","exports","Controls","value","onDeposit","onWithdraw","handleChange","className","Style","controls","onChange","placeholder","type","name","onClick","Balance","balance","income","expenses","role","aria-label","TransactionHistory","items","history","map","item","key","id","amount","Dashboard","state","transactions","summ","eachTranth","shortid","generate","toast","error","setState","Number","clearInput","prevState","e","target","returnStateLS","localStorage","getItem","returnState","JSON","parse","this","prevProps","setItem","stringify","addTrans","randomId","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c426e66c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"style_controls__1gWYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"style_balance__2JcpK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"style_history__1sG2X\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './style.module.css';\n\nconst Controls = ({ value, onDeposit, onWithdraw, handleChange }) => {\n  return (\n    <section className={Style.controls}>\n      <input\n        onChange={handleChange}\n        placeholder=\"write down your summ\"\n        type=\"number\"\n        name=\"amount\"\n        value={value === 0 ? '' : value}\n      />\n      <button onClick={onDeposit} type=\"button\">\n        Deposit\n      </button>\n      <button onClick={onWithdraw} type=\"button\">\n        Withdraw\n      </button>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  value: PropTypes.number.isRequired,\n  onDeposit: PropTypes.func.isRequired,\n  onWithdraw: PropTypes.func.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './style.module.css';\n\nconst Balance = ({ balance, income, expenses }) => {\n  return (\n    <section className={Style.balance}>\n      <span role=\"img\" aria-label=\"Rise\">\n        ⬆️{income}$\n      </span>\n      <span role=\"img\" aria-label=\"Fall\">\n        ⬇️{expenses}$\n      </span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  balance: PropTypes.number.isRequired,\n  income: PropTypes.number.isRequired,\n  expenses: PropTypes.number.isRequired,\n};\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Style from './style.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={Style.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}</td>\n            <td>4/17/2019, 12:45:17</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      amount: PropTypes.number.isRequired,\n      type: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n    summ: 0,\n    income: 0,\n    expenses: 0,\n  };\n\n  componentDidMount() {\n    const returnStateLS = localStorage.getItem('stateObj');\n    if (returnStateLS !== null) {\n      const returnState = JSON.parse(returnStateLS);\n      this.setState({\n        transactions: returnState.transactions,\n        balance: returnState.balance,\n        income: returnState.income,\n        expenses: returnState.expenses,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { transactions } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('stateObj', JSON.stringify({ ...this.state }));\n    }\n  }\n\n  onDeposit = () => {\n    const { summ, balance, transactions } = this.state;\n\n    const eachTranth = {\n      id: shortid.generate(),\n      amount: summ,\n      type: 'deposit',\n      // date: Date.prototype.toLocaleString(),\n    };\n\n    if (summ === 0 || summ === '') {\n      toast.error('Not enough money Dude');\n    } else {\n      this.setState({\n        balance: balance + Number(eachTranth.amount),\n        transactions: [...transactions, eachTranth],\n      });\n      this.income();\n    }\n    this.clearInput();\n  };\n\n  onWithdraw = () => {\n    const { summ, balance, transactions } = this.state;\n    const eachTranth = {\n      id: shortid.generate(),\n      amount: summ,\n      type: 'withdrawal',\n      // date: Date.prototype.toLocaleString(),\n    };\n    if (summ === 0 || balance < summ || summ === '') {\n      toast.error('Not enough money Dude');\n    } else {\n      this.setState({\n        balance: balance - Number(eachTranth.amount),\n        transactions: [...transactions, eachTranth],\n      });\n      this.expenses();\n    }\n    this.clearInput();\n  };\n\n  income = () => {\n    const { summ } = this.state;\n    this.setState(prevState => ({ income: prevState.income + summ }));\n  };\n\n  expenses = () => {\n    const { summ } = this.state;\n    this.setState(prevState => ({ expenses: prevState.expenses + summ }));\n  };\n\n  handleChange = e => {\n    const summ = Number(e.target.value);\n    this.setState({ summ });\n  };\n\n  clearInput = () => {\n    this.setState({ summ: 0 });\n  };\n\n  render() {\n    const { transactions, balance, income, expenses, summ } = this.state;\n    return (\n      <div className=\"dashboard\">\n        <Controls\n          handleChange={this.handleChange}\n          onDeposit={this.onDeposit}\n          onWithdraw={this.onWithdraw}\n          addTrans={this.addTrans}\n          id={this.randomId}\n          value={summ}\n        />\n        <Balance balance={balance} income={income} expenses={expenses} />\n        <TransactionHistory items={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => {\n  return (\n    <>\n      <Dashboard />\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}